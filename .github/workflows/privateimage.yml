# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  #push:
  #  branches: [feature/janko]
  pull_request:
    branches: [feature/janko]

env:
  GITHUB_SHA: ${{ github.sha }}
  NAMESPACE: githubtest
  RESOURCE_NAME: githubtest
  TEAM: techbaseline
  VERSION: ${{ github.sha }}
  DOMAIN: gpp
  GKE_CLUSTER: scholtes-gke-eval-s37o
  GKE_REGION: europe-west3
  GKE_ZONE: europe-west3-a

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: eu.gcr.io/deuba-gcr/${{ secrets.GCP_PROJECT_ID }}/online-limit-ms-github:$GITHUB_SHA

    steps:
      - uses: actions/checkout@v2
      - name: debug
        run: echo " Image is $IMAGE_NAME"

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v10
        with:
          repositories: '[{ "id": "central", "name": "libs-release", "url": "https://gppday85artifactory.jfrog.io/artifactory/libs-release" }]'
          plugin_repositories: '[{ "id": "central", "name": "libs-release", "url": "https://gppday85artifactory.jfrog.io/artifactory/libs-release" }]'
          servers: '[{ "id": "central", "username": "${{secrets.ARTIFACTORY_USERNAME}}", "password": "${{secrets.ARTIFACTORY_PASSWORD}}" }]'

      - name: Maven Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # commenting out as build is triggered inside docker build
      #    - name: Build with Maven
      #      run: mvn -B package --file pom.xml -X

      - name: CodeQL Init
        uses: github/codeql-action/init@v1
        # Override language selection by uncommenting this and choosing your languages
        with:
          languages: java

      - name: CodeQL Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v1

      - name: Authenticate with GCP for GCR
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        with:
          version: 303.0.0
          project_id: deuba-gcr
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS_DEUBA_GCR }}
          export_default_credentials: true

      - name: Upload Container to Google Container Registry
        run: |
          export ARTIFACTORY_USERNAME='${{ secrets.ARTIFACTORY_USERNAME}}'
          export ARTIFACTORY_PASSWORD='${{ secrets.ARTIFACTORY_PASSWORD}}'
          gcloud auth configure-docker
          docker build --build-arg ARTIFACTORY_USERNAME=${ARTIFACTORY_USERNAME} --build-arg ARTIFACTORY_PASSWORD=${ARTIFACTORY_PASSWORD} -t eu.gcr.io/deuba-gcr/${{ secrets.GCP_PROJECT_ID }}/online-limit-ms-github:$GITHUB_SHA .
          docker push eu.gcr.io/deuba-gcr/${{ secrets.GCP_PROJECT_ID }}/online-limit-ms-github:$GITHUB_SHA
      - name: Authenticate with GCP for GKE
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        with:
          version: 303.0.0
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          export_default_credentials: true

      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_REGION"
      - name: Deploy ConfigMap to GKE
        run: |
          cat deployment/01-config-map.yml | envsubst | kubectl apply -f -
      - name: Deploy Deployment to GKE
        run: |
          cat deployment/02-deployment.yml | envsubst | kubectl apply -f -
    # - name: Build and push Docker images
    #   uses: docker/build-push-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     registry: eu.gcr.io/${{secrets.GCP_PROJECT_ID}}
    #     repository: online-limit-ms_github
    #     tags: latest
    #     dockerfile: ./Dockerfile
